using System;
using System.Collections.Generic;

class GfG {
    static List<int> spirallyTraverse(int[][] mat) {
        int m = mat.Length;
        int n = mat[0].Length;

        List<int> res = new List<int>();
        bool[, ] vis = new bool[m, n];

        // Arrays to represent the changes in row and column
        // indices: turn right(0, +1), turn down(+1, 0),
        // turn left(0, -1), turn up(-1, 0)
        int[] dr = { 0, 1, 0, -1 };
        int[] dc = { 1, 0, -1, 0 };

        // Initial position in the matrix
        int r = 0, c = 0;

        // Initial direction index (0 corresponds to
        // 'right')
        int idx = 0;

        for (int i = 0; i < m * n; ++i) {
            res.Add(mat[r][c]);
            vis[r, c] = true;

            // Calculate the next cell coordinates based on
            // current direction
            int newR = r + dr[idx];
            int newC = c + dc[idx];

            // Check if the next cell is within bounds and
            // not visited
            if (newR >= 0 && newR < m && newC >= 0
                && newC < n && !vis[newR, newC]) {
                r = newR;
                c = newC;
            }
            else {
              
                // Change direction (turn clockwise)
                idx = (idx + 1) % 4;
                r += dr[idx];
                c += dc[idx];
            }
        }

        return res;
    }

    static void Main() {
        int[][] mat = { new int[] { 1, 2, 3, 4 },
                        new int[] { 5, 6, 7, 8 },
                        new int[] { 9, 10, 11, 12 },
                        new int[] { 13, 14, 15, 16 } };

        List<int> res = spirallyTraverse(mat);

        foreach(int num in res)
            Console.Write(num + " ");
    }
}
