using System;

class GfG {

    // Function to rotate the matrix by 90 degrees clockwise
    static void rotate90(int[][] mat) {
        int n = mat.Length;

        // Initialize the result matrix with zeros
        int[][] res = new int[n][];
        for (int i = 0; i < n; i++) {
            res[i] = new int[n];
        }

        // Flip the matrix clockwise using nested loops
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                res[j][n - i - 1] = mat[i][j];
            }
        }

        // Copy result back to mat
        for (int i = 0; i < n; i++) {
            Array.Copy(res[i], mat[i], n);
        }
    }

    public static void Main() {
        int[][] mat = {
            new int[] {1, 2, 3, 4},
            new int[] {5, 6, 7, 8},
            new int[] {9, 10, 11, 12},
            new int[] {13, 14, 15, 16}
        };

        rotate90(mat);

        // Print the rotated matrix
        for (int i = 0; i < mat.Length; i++) {
            for (int j = 0; j < mat[i].Length; j++) {
                Console.Write(mat[i][j] + " ");
            }
            Console.WriteLine();
        }
    }
}
